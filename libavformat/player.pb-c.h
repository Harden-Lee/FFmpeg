/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: player.proto */

#ifndef PROTOBUF_C_player_2eproto__INCLUDED
#define PROTOBUF_C_player_2eproto__INCLUDED

#include "protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Livepb__Player__ScPlayerNoStreamNotify Livepb__Player__ScPlayerNoStreamNotify;
typedef struct _Livepb__Player__ScPlayerDisconnFromUpstreamNotify Livepb__Player__ScPlayerDisconnFromUpstreamNotify;
typedef struct _Livepb__Player__CsPlayerStatisticsFrameNotify Livepb__Player__CsPlayerStatisticsFrameNotify;
typedef struct _Livepb__Player__CsPlayerStopReq Livepb__Player__CsPlayerStopReq;
typedef struct _Livepb__Player__ScPlayerStopRes Livepb__Player__ScPlayerStopRes;


/* --- enums --- */


/* --- messages --- */

/*
 * 无此路流(10100)
 */
struct  _Livepb__Player__ScPlayerNoStreamNotify
{
  ProtobufCMessage base;
  /*
   * 挂载点
   */
  char *app;
  /*
   * 流号
   */
  char *stream_id;
};
#define LIVEPB__PLAYER__SC_PLAYER_NO_STREAM_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&livepb__player__sc_player_no_stream_notify__descriptor) \
    , NULL, NULL }


/*
 * 与上游节点掉线通知(10101)
 */
struct  _Livepb__Player__ScPlayerDisconnFromUpstreamNotify
{
  ProtobufCMessage base;
};
#define LIVEPB__PLAYER__SC_PLAYER_DISCONN_FROM_UPSTREAM_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&livepb__player__sc_player_disconn_from_upstream_notify__descriptor) \
     }


/*
 * 统计帧
 * 接收端反馈给服务器(10102)
 */
struct  _Livepb__Player__CsPlayerStatisticsFrameNotify
{
  ProtobufCMessage base;
  /*
   * 接收端收到的gop索引值
   */
  protobuf_c_boolean has_gop_sequence;
  int32_t gop_sequence;
  /*
   * 接收端统计出的帧率
   */
  protobuf_c_boolean has_frame_rate;
  int32_t frame_rate;
  /*
   * 接收端收到的1个gop内的I帧数
   */
  protobuf_c_boolean has_idr_count;
  int32_t idr_count;
  /*
   * 接收端收到的1个gop内的B帧数
   */
  protobuf_c_boolean has_slice_b_count;
  int32_t slice_b_count;
  /*
   * 接收端收到的1个gop内的P帧数
   */
  protobuf_c_boolean has_slice_p_count;
  int32_t slice_p_count;
  /*
   * 接收端计算出的下行速率(单位kbps)
   */
  protobuf_c_boolean has_average_download_speed;
  int32_t average_download_speed;
};
#define LIVEPB__PLAYER__CS_PLAYER_STATISTICS_FRAME_NOTIFY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&livepb__player__cs_player_statistics_frame_notify__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


/*
 * 请求停播(10103)
 */
struct  _Livepb__Player__CsPlayerStopReq
{
  ProtobufCMessage base;
};
#define LIVEPB__PLAYER__CS_PLAYER_STOP_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&livepb__player__cs_player_stop_req__descriptor) \
     }


/*
 * (10104)
 */
struct  _Livepb__Player__ScPlayerStopRes
{
  ProtobufCMessage base;
};
#define LIVEPB__PLAYER__SC_PLAYER_STOP_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&livepb__player__sc_player_stop_res__descriptor) \
     }


/* Livepb__Player__ScPlayerNoStreamNotify methods */
void   livepb__player__sc_player_no_stream_notify__init
                     (Livepb__Player__ScPlayerNoStreamNotify         *message);
size_t livepb__player__sc_player_no_stream_notify__get_packed_size
                     (const Livepb__Player__ScPlayerNoStreamNotify   *message);
size_t livepb__player__sc_player_no_stream_notify__pack
                     (const Livepb__Player__ScPlayerNoStreamNotify   *message,
                      uint8_t             *out);
size_t livepb__player__sc_player_no_stream_notify__pack_to_buffer
                     (const Livepb__Player__ScPlayerNoStreamNotify   *message,
                      ProtobufCBuffer     *buffer);
Livepb__Player__ScPlayerNoStreamNotify *
       livepb__player__sc_player_no_stream_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   livepb__player__sc_player_no_stream_notify__free_unpacked
                     (Livepb__Player__ScPlayerNoStreamNotify *message,
                      ProtobufCAllocator *allocator);
/* Livepb__Player__ScPlayerDisconnFromUpstreamNotify methods */
void   livepb__player__sc_player_disconn_from_upstream_notify__init
                     (Livepb__Player__ScPlayerDisconnFromUpstreamNotify         *message);
size_t livepb__player__sc_player_disconn_from_upstream_notify__get_packed_size
                     (const Livepb__Player__ScPlayerDisconnFromUpstreamNotify   *message);
size_t livepb__player__sc_player_disconn_from_upstream_notify__pack
                     (const Livepb__Player__ScPlayerDisconnFromUpstreamNotify   *message,
                      uint8_t             *out);
size_t livepb__player__sc_player_disconn_from_upstream_notify__pack_to_buffer
                     (const Livepb__Player__ScPlayerDisconnFromUpstreamNotify   *message,
                      ProtobufCBuffer     *buffer);
Livepb__Player__ScPlayerDisconnFromUpstreamNotify *
       livepb__player__sc_player_disconn_from_upstream_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   livepb__player__sc_player_disconn_from_upstream_notify__free_unpacked
                     (Livepb__Player__ScPlayerDisconnFromUpstreamNotify *message,
                      ProtobufCAllocator *allocator);
/* Livepb__Player__CsPlayerStatisticsFrameNotify methods */
void   livepb__player__cs_player_statistics_frame_notify__init
                     (Livepb__Player__CsPlayerStatisticsFrameNotify         *message);
size_t livepb__player__cs_player_statistics_frame_notify__get_packed_size
                     (const Livepb__Player__CsPlayerStatisticsFrameNotify   *message);
size_t livepb__player__cs_player_statistics_frame_notify__pack
                     (const Livepb__Player__CsPlayerStatisticsFrameNotify   *message,
                      uint8_t             *out);
size_t livepb__player__cs_player_statistics_frame_notify__pack_to_buffer
                     (const Livepb__Player__CsPlayerStatisticsFrameNotify   *message,
                      ProtobufCBuffer     *buffer);
Livepb__Player__CsPlayerStatisticsFrameNotify *
       livepb__player__cs_player_statistics_frame_notify__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   livepb__player__cs_player_statistics_frame_notify__free_unpacked
                     (Livepb__Player__CsPlayerStatisticsFrameNotify *message,
                      ProtobufCAllocator *allocator);
/* Livepb__Player__CsPlayerStopReq methods */
void   livepb__player__cs_player_stop_req__init
                     (Livepb__Player__CsPlayerStopReq         *message);
size_t livepb__player__cs_player_stop_req__get_packed_size
                     (const Livepb__Player__CsPlayerStopReq   *message);
size_t livepb__player__cs_player_stop_req__pack
                     (const Livepb__Player__CsPlayerStopReq   *message,
                      uint8_t             *out);
size_t livepb__player__cs_player_stop_req__pack_to_buffer
                     (const Livepb__Player__CsPlayerStopReq   *message,
                      ProtobufCBuffer     *buffer);
Livepb__Player__CsPlayerStopReq *
       livepb__player__cs_player_stop_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   livepb__player__cs_player_stop_req__free_unpacked
                     (Livepb__Player__CsPlayerStopReq *message,
                      ProtobufCAllocator *allocator);
/* Livepb__Player__ScPlayerStopRes methods */
void   livepb__player__sc_player_stop_res__init
                     (Livepb__Player__ScPlayerStopRes         *message);
size_t livepb__player__sc_player_stop_res__get_packed_size
                     (const Livepb__Player__ScPlayerStopRes   *message);
size_t livepb__player__sc_player_stop_res__pack
                     (const Livepb__Player__ScPlayerStopRes   *message,
                      uint8_t             *out);
size_t livepb__player__sc_player_stop_res__pack_to_buffer
                     (const Livepb__Player__ScPlayerStopRes   *message,
                      ProtobufCBuffer     *buffer);
Livepb__Player__ScPlayerStopRes *
       livepb__player__sc_player_stop_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   livepb__player__sc_player_stop_res__free_unpacked
                     (Livepb__Player__ScPlayerStopRes *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Livepb__Player__ScPlayerNoStreamNotify_Closure)
                 (const Livepb__Player__ScPlayerNoStreamNotify *message,
                  void *closure_data);
typedef void (*Livepb__Player__ScPlayerDisconnFromUpstreamNotify_Closure)
                 (const Livepb__Player__ScPlayerDisconnFromUpstreamNotify *message,
                  void *closure_data);
typedef void (*Livepb__Player__CsPlayerStatisticsFrameNotify_Closure)
                 (const Livepb__Player__CsPlayerStatisticsFrameNotify *message,
                  void *closure_data);
typedef void (*Livepb__Player__CsPlayerStopReq_Closure)
                 (const Livepb__Player__CsPlayerStopReq *message,
                  void *closure_data);
typedef void (*Livepb__Player__ScPlayerStopRes_Closure)
                 (const Livepb__Player__ScPlayerStopRes *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor livepb__player__sc_player_no_stream_notify__descriptor;
extern const ProtobufCMessageDescriptor livepb__player__sc_player_disconn_from_upstream_notify__descriptor;
extern const ProtobufCMessageDescriptor livepb__player__cs_player_statistics_frame_notify__descriptor;
extern const ProtobufCMessageDescriptor livepb__player__cs_player_stop_req__descriptor;
extern const ProtobufCMessageDescriptor livepb__player__sc_player_stop_res__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_player_2eproto__INCLUDED */
